blueprint:
  name: TRV Calibrator
  description: Calibrate your TRV using an external sensor
  domain: automation
  input:
    trv:
      name: Smart TRV
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: Temperature Sensor
      description: Sensor used to calibrate your TRV
      selector:
        entity:
          domain: sensor
          device_class: temperature
    trv_calibration_number:
      name: TRV Calibration Entity
      description: If you can't find it it's possible that your TRV don't support calibration. Consider using the Better Thermostat custom integration instead.
      selector:
        entity:
          domain: number
          device_class: temperature

mode: restart

variables:
  trv: !input trv
  trv_calibration_number: !input trv_calibration_number
  temperature_sensor: !input temperature_sensor

  trv_attribute: '{{ state_attr(trv, "current_temperature") }}'
  trv_calibration_number_state: '{{ states(trv_calibration_number) }}'
  temperature_sensor_state: '{{ states(temperature_sensor) }}'

  trv_calibration_step: '{{ state_attr(trv_calibration_number, "step") | float(1) }}'
  trv_calibration_step_decimals: >- 
                                {% set step = trv_calibration_step | string %}
                                {% if step.split(".") | length > 1 -%}
                                  {{ step.split(".")[1] | length }}
                                {%- else -%}
                                  {{ 0 }}
                                {%- endif %}
  room_temperature: '{{ temperature_sensor_state | float(0) }}'
  trv_temperature: '{{ state_attr(trv, "current_temperature") | float(0) }}'
  trv_calibration: '{{ trv_calibration_number_state | float(0) }}'
  trv_calibration_min: '{{ state_attr(trv_calibration_number, "min") | float(-5) }}'
  trv_calibration_max: '{{ state_attr(trv_calibration_number, "max") | float(5) }}'
  new_trv_calibration: '{{ room_temperature - trv_temperature + trv_calibration }}'
  new_trv_calibration_bounded: '{{ [ [ (new_trv_calibration - new_trv_calibration % trv_calibration_step) | round(trv_calibration_step_decimals), trv_calibration_min ] | max, trv_calibration_max ] | min }}'

trigger:
  - platform: state
    entity_id: !input trv
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: !input trv_calibration_number
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: !input temperature_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 0

condition:
  - condition: template
    value_template: '{{ trv_attribute != None }}'
  - condition: template
    value_template: '{{ trv_calibration_number_state != "unavailable" and trv_calibration_number_state != "unknown" }}'
  - condition: template
    value_template: '{{ temperature_sensor_state != "unavailable" and temperature_sensor_state != "unknown" }}'
  - condition: template
    value_template: '{{ new_trv_calibration_bounded < trv_calibration - trv_calibration_step or trv_calibration + trv_calibration_step < new_trv_calibration_bounded}}'


action:
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: number.set_value
    target:
      entity_id: !input trv_calibration_number
    data:
      value: '{{ new_trv_calibration_bounded }}'
